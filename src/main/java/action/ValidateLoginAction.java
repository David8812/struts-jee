/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package action;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import form.UserFormBean;
import javax.inject.Inject;
import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import service.UserService;
import service.impl.UserServiceImpl;

/**
 * MyEclipse Struts Creation date: 06-21-2010
 *
 * XDoclet definition:
 *
 * @struts.action validate="true"
 */
public class ValidateLoginAction extends Action {

    UserServiceImpl userService = new UserServiceImpl();
    /*
	 * Generated Methods
     */
    /**
     * Method execute
     *
     * @param mapping
     * @param form
     * @param request
     * @param response
     * @return ActionForward
     */
    @Override
    public ActionForward execute(ActionMapping mapping, ActionForm form,
            HttpServletRequest request, HttpServletResponse response) {

        //System.out.println("EJB: " + userService);
        
        //Variables validas en codigo duro
        
        // 1. Procesamos los parametros
        // String usuarioParam = request.getParameter("usuario");
        // String passwordParam = request.getParameter("password");
        String usuarioParam, passwordParam;
        UserFormBean user = (UserFormBean) form;

        System.out.println("Usuario: " + user.getUserName() + " Contraseña: " + user.getPassword());
        usuarioParam = user.getUserName();
        passwordParam = user.getPassword();
        
        System.out.println("Usuario: " + usuarioParam + " Contraseña: " + passwordParam);
        
        boolean found = userService.findByUserAndPassword(usuarioParam, passwordParam);

        //2. Validamos los parametros
        if (found) {
            user.reset(mapping, request);
            System.out.println("usuario valido");
            return mapping.findForward("valido");
        } else {
            request.setAttribute("mensaje", "Datos incorrectos");
            user.reset(mapping, request);
            System.out.println("usuario no valido");
            return mapping.findForward("noValido");
        }
    }
}